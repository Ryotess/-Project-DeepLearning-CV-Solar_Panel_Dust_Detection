我是統計碩二的陳劭晏，這次期末報告的主題是「太陽能板上的灰塵偵測」

接下來的報告會分成四個部分：問題說明、執行計畫和目標、實驗和結果以及結論討論

[Problem]
Q. 首先我想問大家一個問題：為甚麼我們需要偵測太陽能板上的灰塵?

A. 這個問題需要考慮到兩個層面，第一個層面是人類使用的能源來源，第二個則是能源效率

[[Energy Source]]
我們先來談能源來源，聯合國於2015年提出SDGs 17項2030全球永續發展目標，
其中第七項便與再生能源有關，
而近年來各個國家和企業極力推廣的CSR、ESG也都相當重視再生能源的使用，
在現代化的社會底下，乾淨的能源、永續的發展是每個人都該重視的議題。

{Solar Energy}
根據國際能源機構(IEA)和國際可再生能源機構(IRENA)的統計，
2021年世界總電力生產有30%來自可再生能源，
其中太陽能在再生能源的佔比高達28%，僅次於水力發電。
由此可知，太陽能在地球的永續發展上佔了非常重要的地位。

[Problem]
既然太陽能這麼重要，我們進一步要探討的是：該如何維持、拓展太陽能的發電效率
今天的問題便是著重在維持太陽能的發電效率上。

[[Energy Efficiency]]
據此我找了幾篇論文，這些論文針對太陽能板的產電效率進行評估，
結合這幾篇的研究結果，會發現若太陽能板上面有髒汙，產電效率會降低高達30%

[Problem]
因此，針對太陽能板的髒汙偵測便成為一項重要議題。

[Plan & Goal]
本報告便以此為著力點，使用PR技巧來解決此問題。

[[Plan]]
在計劃方面，首先我從Google Images爬下共計2562張乾淨/髒污的圖片，
並對他們進行Dust/Clean的標註。
而後因為資料集較小，在訓練前使用Data Augmentation的方法來增加訓練資料。
接著在模型建置上，我選用過去專案經驗裡表現較佳的SVM，以及嘗試建立CNN模型。

[Plan & Goal]
接著就來談我對這份專案的預期目標。

[[Goal]]
在實際執行前，我設定了三項目標，
我希望這個模型能達到至少90%的測試集預測率，
且考量到模型的精確度，同時我也希望F1-Score能有不錯的表現，目標為80%
最後，我希望這個模型的參數盡可能的少，且計算上足夠輕便。

順帶一提，我使用的設備是12代i7和RTX3070 8G，不是目前市面上最高的配置，
因此只要我的電腦train得動的模型都算符合低標。

[Experiments & Results]
接著跟大家介紹這次訓練的模型，以及模型的表現。

[[Models]]
首先先切割訓練、驗證和測試集，分別為80%, 10%, 10%。
接著做資料增強，這邊我使用的是平行翻轉。
接著把每張圖像都reshape成一樣的大小(300*300)，
然後進行建模，最後評估模型表現。
建模的部分共有8個模型架構，
分別為SVM、自己建的CNN、以ResNet50、Xception、VGG19、EfficientNetB0/B3/B5為Based的模型

[[[Modeling]]]
在模型建立上，每個模型都會進行調整並比較最佳表現。
SVM的部分透過GridSearch對預設的參數進行調整，
自己表現較好的CNN則是參考VGG的架構，考量到太陽能板的髒污可能是大面積的，
我最前面所設定的Kernel較VGG還大，使用7*7再降到5*5到3*3，
Activation使用relu，並在pooling之前使用BatchNormalization，
其中有兩層Dropout避免overfitting以及沒用的參數。

{Transfer Learning}
其他模型使用遷移學習的方式，在原本使用ImageNet訓練好的權重底下，
不同的模型作為特徵擷取的架構，後面接上BN、FC和Dropout，
並依照不同模型進行調整，在部分模型會增加Regularizer，防止overfit。

最後依照這些架構，最佳的模型建構表現分別如下:
[[[Measurements]]]
EfficientNetB3 Based的模型表現在兩項當初設定的目標上皆有達標，
且F1-Score比原先設定的80%還高5%。

接著我們來看這個最佳模型的細節
[[Results]]
首先，他達成90% test acc，以及85% F1-Score，並且這個模型tensorflow直接就有架構可以用，
非常易於使用，而且訓練的時間、次數也不高，因此他符合了當初對專案的期待。


{Structure}
我在訓練這個模型的過程中，基本設定是Early Stopping = 5，且嘗試了SDG跟Adamax
首先加了BN層，並直接接FC和Softmax，但發現模型傾向overfit，
他會在訓練集和驗證集皆超過95% accuracy，但test acc以及F1表現都不好。
因此後續我增加了Dropout層，考量到當初模型權重是1000類，對於2 class分類或許會擷取太細節的特徵而overfit。
後來在FC上面增加regularizer，然後Dropout，接一層Dense 64，再Dropout，接Dense 2 SoftMax。
最後在這樣的架構下訓練出最佳模型。

[Conclusion& Discussion]
最後，我們來談談這個專案的結論和未來可以做的改進。
[[Conclusion]]
我個人在這份專案中，除了達成預先設立的目標外，
學習到如何建立模型，新增每一層的目的，該怎麼選擇參數等等。
而這份資料因為資料量少，所以實際使用到Data Augmentation的方法。
並且因為網路上有髒汙的太陽能板照片真的非常少，所以相對於乾淨的太陽能板，
這份資料是Imbalance的，也因此在前處理的時候有先把訓練集均勻分割才做訓練。
最後是每一個模型都很常overfit，而且F1-Score在大多時候都不太好，
所以使用到上課教過一些增加模型表現、避免過擬合的方法。

[[Future Work]]
對於這份專案，未來可以嘗試的有
新增多一點資料，直接從Google Images上抓的話，我所使用的就是全部的資料了，
若是為了商業、研究用途，經費允許下可以考慮花錢蒐集資料或到付費影像平台購買。
且礙於時間成本、人力考量，當初抓下來的資料其實沒有多做清理，Dust裡有些參雜到Clean的照片，
因此除了前面提到的Imbalance以外，也很直接影響到F1-Score的表現。
另外我認為模型的設定或許可以針對這個議題做研究，找出更適合的架構。
上述這幾點若能改善，相信對於這個髒汙偵測的議題會有很大的幫助。

以上就是我這次期末專案的成果。